#! /usr/bin/ruby
# Copyright 2010,2011  Vincent Batts, Vienna, VA
# All rights reserved.
#
# Redistribution and use of this source, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this source must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

$PROGRAM_NAME = File.basename(__FILE__)

require 'rubygems'
require 'slackware/log'
require 'slackware/utils'
require 'slackware/args'

option_banner = <<-EOS
List installed Slackware packages.
Usage:
  #{$PROGRAM_NAME} [options] [search flags] [list of names]
  
  if no flags are used, then all entries are listed
  if no search flags, only names, then those only those matching entries are listed

EOS
# This is all the flags we want to use, from Slackware::Args
option_flags = [:color, :case_insensitive, :pkg_name,
    :debug, :pkg_version, :pkg_arch, :pkg_build, :pkg_tag]

options = Slackware::Args.parse(ARGV, option_flags, option_banner)
Slackware::Log.debug("options: %s" % options)

if (ARGV.count > 0)
  options[:all] = true
end

begin
  print_packages(build_packages(options, ARGV))
rescue Interrupt
  exit 0
rescue Exception => e
  puts "ERROR: #{e.message}"
  puts e.backtrace.join("\n") if options[:debug]
  exit 1
end


# vim : set sw=2 sts=2 noet :
