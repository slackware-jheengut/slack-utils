#! /usr/bin/ruby
# Copyright 2010,2011  Vincent Batts, Vienna, VA
# All rights reserved.
#
# Redistribution and use of this source, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this source must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

$PROGRAM_NAME = File.basename(__FILE__)

require 'optparse'
require 'rubygems'
require 'slackware/utils'

options = {}
begin
	OptionParser.new do |opts|
		opts.banner = <<-EOS

Search for a file within installed Slackware package's FILE LIST.

Usage:
	#{File.basename(__FILE__)} [options] [pkg search flags] <one or more files>
	
	one or more files must be list
	if no search flags, only names, then those only those matching entries are listed
EOS
		opts.on("-c", "--color", "Colorize output") do |o|
			options[:color] = o
		end
		opts.on("-p", "--pkg [NAME]", "Package PKGNAME (loose match)") do |o|
			options[:pkg] = o
		end
		opts.on("-V", "--Version [VERSION]", "Package VERSION (loose match)") do |o|
			options[:version] = o
		end
		opts.on("-a", "--arch [ARCH]", "Package ARCH (exact match)") do |o|
			options[:arch] = o
		end
		opts.on("-b", "--build [BUILD]", "Package BUILD (exact match)") do |o|
			options[:build] = o
		end
		opts.on("-t", "--tag [TAG]", "Package TAG (loose match)") do |o|
			options[:tag] = o
		end
		opts.on("-v", "--version", "Display version of this software") do |o|
			printf("slack-utils (%s) version: %s, Slackware version: %s\n",
			       File.basename(__FILE__),
			       Slackware::UTILS_VERSION,
			       Slackware::System.version
			      )
			exit()
		end

		opts.parse!

		if (ARGV.count == 0)
			$stderr.write("ERROR: one of more file must be specified\n")
			puts opts
			exit 2
		end
	end
rescue OptionParser::InvalidOption => e
	$stderr.write("ERROR: #{e.message}, see --help\n")
	exit 1
end

if (ARGV.count > 0)
	options[:all] = true
end

begin
	print_package_searched_files(build_packages(options, []), ARGV)
rescue Interrupt
	exit 0
rescue Exception => e
	puts "ERROR: #{e.message}"
	exit 1
end

